/* CartController.java
 * Module 7 Assignment
 * Name: Brittany Kyncl
 * Date: 6.30.23
 * Course: CSD430
 * NOTICE OF REVISION:
 * Controller class responsible for handling user input, updating the model,
 * and selecting the appropriate view to render the response. The controller
 * logic has been moved into this separate class to align more with MVC pattern. By encapsulating
 * the controller logic in its own class, it becomes more modular, maintainable,
 * and independent of the servlet implementation.
 * code exampled from source: "Beginning Jarkarta EE Web Development: 3rd Edition" by Manelli, Zambon
 */

package eshop.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.Enumeration;
import java.util.Hashtable;
import eshop.beans.Book;
import eshop.beans.CartItem;
import eshop.model.DataManager;

public class CartController {
	private DataManager dataManager;

	  public CartController(DataManager dataManager) {
	    this.dataManager = dataManager;
	  }

	  public void addItem(HttpServletRequest request) {
	    HttpSession session = request.getSession();
	    Hashtable<String, CartItem> shoppingCart = (Hashtable<String, CartItem>) session.getAttribute("shoppingCart");
	    if (shoppingCart == null) {
	      shoppingCart = new Hashtable<>(10);
	      session.setAttribute("shoppingCart", shoppingCart);
	    }

	    String bookId = request.getParameter("bookId");
	    Book book = dataManager.getBookDetails(bookId);
	    if (book != null) {
	      CartItem item = new CartItem(book, 1);
	      shoppingCart.remove(bookId);
	      shoppingCart.put(bookId, item);
	    }
	  }

	  public void updateItem(HttpServletRequest request) {
	    HttpSession session = request.getSession();
	    Hashtable<String, CartItem> shoppingCart = (Hashtable<String, CartItem>) session.getAttribute("shoppingCart");
	    if (shoppingCart == null) {
	      return;
	    }

	    String bookId = request.getParameter("bookId");
	    String quantity = request.getParameter("quantity");
	    CartItem item = shoppingCart.get(bookId);
	    if (item != null) {
	      item.setQuantity(quantity);
	    }
	  }

	  public void deleteItem(HttpServletRequest request) {
	    HttpSession session = request.getSession();
	    Hashtable<String, CartItem> shoppingCart = (Hashtable<String, CartItem>) session.getAttribute("shoppingCart");
	    if (shoppingCart == null) {
	      return;
	    }

	    String bookId = request.getParameter("bookId");
	    shoppingCart.remove(bookId);
	  }
}
